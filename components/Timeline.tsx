'use client'

import { motion } from 'framer-motion'
import { useLanguage } from '../contexts/LanguageContext'
import { Calendar, MapPin, ExternalLink } from 'lucide-react'

const Timeline = () => {
  const { t } = useLanguage()

  const timelineEvents = [
    {
      period: '2025Âπ¥9Êúà - Ëá≥‰ªä',
      title: 'ÊñØÂù¶Á¶èÂ§ßÂ≠¶',
      subtitle: '‰∫∫Â∑•Êô∫ËÉΩ‰∏éËÆ°ÁÆóÊú∫ÁßëÂ≠¶Á°ïÂ£´Âú®ËØª',
      location: 'ÁæéÂõΩÊñØÂù¶Á¶è',
      description: 'Â∞±ËØª‰∫∫Â∑•Êô∫ËÉΩ‰∏éËÆ°ÁÆóÊú∫ÁßëÂ≠¶Á°ïÂ£´È°πÁõÆÔºåÊ∑±ÂÖ•Â≠¶‰π†ÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩ„ÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã„ÄÅËßÜËßâÊ®°Âûã‰∏éÊâ©Êï£Ê®°ÂûãÁ≠âÂâçÊ≤øÊäÄÊúØ„ÄÇ',
      category: 'education',
      link: null,
      current: true
    },
    {
      period: '2019Âπ¥ - 2025Âπ¥9Êúà',
      title: 'ËÄÄÂá∫Ë°åÔºàStarRidesÔºâ',
      subtitle: 'È¶ñÂ∏≠ÊâßË°åÂÆòÔºàÈ¶ñÂ∏≠ÊâßË°åÂÆòÔºâ',
      location: '‰∫öÊ¥≤',
      description: 'Âàù‰ªªÈ¶ñÂ∏≠ËøêËê•ÂÆòÔºåÂêéÂçá‰ªªÈ¶ñÂ∏≠ÊâßË°åÂÆòÔºåÂÖ®Èù¢Ë¥üË¥£ÂÖ¨Âè∏ÁöÑÁªèËê•‰∏éËøêËê•ÁÆ°ÁêÜ„ÄÇÂ∏¶È¢ÜÂÖ¨Âè∏‰ªé0Âà∞1ÂºÄÂàõÈ´òÂìÅË¥®Âá∫Ë°å‰∏öÂä°ÔºåÊâìÈÄ†Ê®™Ë∑®‰∫öÊ¥≤ÁöÑÈ´òÁ´ØÂá∫Ë°åÁ¨¨‰∏ÄÂìÅÁâå„ÄÇ',
      category: 'entrepreneurship',
      link: null,
      current: false
    },
    {
      period: '2017Âπ¥ - 2019Âπ¥',
      title: 'Êª¥Êª¥Âá∫Ë°åÔºàDiDi ChuxingÔºâ',
      subtitle: 'ÊàòÁï•‰∏éËøêËê•ÁÆ°ÁêÜ',
      location: 'ÂÖ®ÁêÉ',
      description: 'Êé®Âä®Ë∑®ÂõΩÊàòÁï•È°πÁõÆËêΩÂú∞‰∏éÂÆûÊñΩÔºåÊ∂µÁõñÁæéÂõΩ„ÄÅËã±ÂõΩ„ÄÅÂç∞Â∫¶Á≠âÂ∏ÇÂú∫„ÄÇÂú®ËßÑÊ®°ÂåñËøêËê•ÂíåÂõΩÈôÖÂåñÊãìÂ±ïÊñπÈù¢ÂèëÊå•ÂÖ≥ÈîÆ‰ΩúÁî®„ÄÇ',
      category: 'entrepreneurship',
      link: null,
      current: false
    },
    {
      period: '2014Âπ¥ - 2015Âπ¥',
      title: 'Ê≥¢Â£´È°øÂí®ËØ¢ÂÖ¨Âè∏ÔºàBCGÔºâ',
      subtitle: 'ÊàòÁï•È°æÈóÆ',
      location: 'ÂÖ®ÁêÉ',
      description: 'ÊúçÂä°‰∫éÊ±ΩËΩ¶‰∏éÈ´òÁ´ØÊ∂àË¥πÂìÅË°å‰∏öÂÆ¢Êà∑ÔºåÂèÇ‰∏éÁæéÂõΩ„ÄÅËã±ÂõΩ„ÄÅÂç∞Â∫¶Á≠âÂ∏ÇÂú∫ÁöÑË∑®ÂõΩÊàòÁï•‰∏éËΩ¨ÂûãÈ°πÁõÆ„ÄÇÂú®ÂïÜ‰∏öÊ®°ÂºèÂàõÊñ∞„ÄÅÁªÑÁªá‰ºòÂåñÂèä‰ºÅ‰∏öÂ¢ûÈïøÊàòÁï•ÊñπÈù¢ÊúâÊàêÂäüÊ°à‰æã„ÄÇ',
      category: 'consulting',
      link: null,
      current: false
    },
    {
      period: '2011Âπ¥ - 2014Âπ¥',
      title: 'Êç∑Ë±πË∑ØËôéÊ±ΩËΩ¶ÂÖ¨Âè∏ÔºàJaguar Land RoverÔºâ',
      subtitle: 'ÂÖ®ÁêÉÊàòÁï•ÈÉ®ÁªèÁêÜ',
      location: 'ÂÖ®ÁêÉ',
      description: 'Ë¥üË¥£ÂÖ®ÁêÉÊàòÁï•ËßÑÂàí‰∏éÂ∏ÇÂú∫ÊãìÂ±ïÔºå‰∏ªÂØºÂ§öÈ°πË∑®ÂõΩ‰∏öÂä°ÊàòÁï•È°πÁõÆ„ÄÇÂú®È´òÁ´ØÊ±ΩËΩ¶ÂìÅÁâåÂõΩÈôÖÂåñÊàòÁï•Âíå‰ºÅ‰∏öÂ¢ûÈïøË∑ØÂæÑÊñπÈù¢ÁßØÁ¥Ø‰∫Ü‰∏∞ÂØåÁªèÈ™å„ÄÇ',
      category: 'strategy',
      link: null,
      current: false
    },
    {
      period: '2005Âπ¥ - 2009Âπ¥',
      title: 'Á¶èÁâπÊ±ΩËΩ¶ÂÖ¨Âè∏ÔºàFord Motor CompanyÔºâ',
      subtitle: 'Êú∫Ê¢∞Â∑•Á®ãÂ∏à',
      location: 'ÂÖ®ÁêÉ',
      description: 'ÂèÇ‰∏éÊï¥ËΩ¶Á†îÂèë‰∏éÂ∑•Á®ãÈ°πÁõÆÔºåÁßØÁ¥Ø‰∫ÜÊâéÂÆûÁöÑÊ±ΩËΩ¶Â∑•Á®ã‰∏éÈ°πÁõÆÁÆ°ÁêÜÁªèÈ™å„ÄÇ‰∏∫ÂêéÁª≠ÁöÑÊàòÁï•ÁÆ°ÁêÜÂ≤ó‰ΩçÂ•†ÂÆöÊäÄÊúØÂü∫Á°Ä„ÄÇ',
      category: 'engineering',
      link: null,
      current: false
    }
  ]

  const educationEvents = [
    {
      period: '2025 - 2026',
      title: 'ÊñØÂù¶Á¶èÂ§ßÂ≠¶',
      subtitle: '‰∫∫Â∑•Êô∫ËÉΩ‰∏éËÆ°ÁÆóÊú∫ÁßëÂ≠¶Á°ïÂ£´',
      location: 'ÁæéÂõΩÊñØÂù¶Á¶è',
      description: 'ÊñØÂù¶Á¶èÂ§ßÂ≠¶ËÆ°ÁÆóÊú∫ÁßëÂ≠¶Á≥ª‰∫∫Â∑•Êô∫ËÉΩ‰∏éËÆ°ÁÆóÊú∫ÁßëÂ≠¶Á°ïÂ£´È°πÁõÆÔºåÂ≠¶‰π†ÊñπÂêëÔºöÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩ„ÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã„ÄÅËßÜËßâÊ®°Âûã„ÄÅÊâ©Êï£Ê®°Âûã„ÄÇ',
      category: 'education',
      link: null,
      current: false
    },
    {
      period: '2023 - 2024',
      title: 'Âìà‰ΩõÂïÜÂ≠¶Èô¢',
      subtitle: 'È´òÁ∫ßÂ∑•ÂïÜÁÆ°ÁêÜÁ°ïÂ£´',
      location: 'ÁæéÂõΩÊ≥¢Â£´È°ø',
      description: 'Âìà‰ΩõÂïÜÂ≠¶Èô¢Executive MBAÈ°πÁõÆÔºå‰∏ìÊ≥®‰∫éÈ´òÁ∫ßÁÆ°ÁêÜÊäÄËÉΩ„ÄÅÂÖ®ÁêÉÂïÜ‰∏öÊàòÁï•ÂíåÈ¢ÜÂØºÂäõÂèëÂ±ï„ÄÇ',
      category: 'education',
      link: null,
      current: false
    },
    {
      period: '2016 - 2017',
      title: 'ÁæéÂõΩÂØÜÊ≠áÊ†πÂ§ßÂ≠¶‰ø°ÊÅØÁßëÂ≠¶Â≠¶Èô¢',
      subtitle: 'Êï∞ÊçÆÁßëÂ≠¶Á°ïÂ£´',
      location: 'ÁæéÂõΩÂÆâÂ®úÂ†°',
      description: 'ÁæéÂõΩÂØÜÊ≠áÊ†πÂ§ßÂ≠¶‰ø°ÊÅØÁßëÂ≠¶Â≠¶Èô¢Êï∞ÊçÆÁßëÂ≠¶Á°ïÂ£´È°πÁõÆÔºåÂ≠¶‰π†ÊñπÂêëÔºöÊú∫Âô®Â≠¶‰π†„ÄÅÊï∞ÊçÆÂàÜÊûê„ÄÅ‰∫∫Â∑•Êô∫ËÉΩÂü∫Á°Ä„ÄÇ',
      category: 'education',
      link: null,
      current: false
    },
    {
      period: '2009 - 2011',
      title: '‰∏≠Ê¨ßÂõΩÈôÖÂ∑•ÂïÜÂ≠¶Èô¢',
      subtitle: 'Â∑•ÂïÜÁÆ°ÁêÜÁ°ïÂ£´',
      location: '‰∏≠ÂõΩ‰∏äÊµ∑',
      description: '‰∏≠Ê¨ßÂõΩÈôÖÂ∑•ÂïÜÂ≠¶Èô¢MBAÈ°πÁõÆÔºåÁ≥ªÁªüÂ≠¶‰π†Áé∞‰ª£‰ºÅ‰∏öÁÆ°ÁêÜÁêÜËÆ∫ÔºåÂüπÂÖªÂõΩÈôÖÂåñÂïÜ‰∏öÊÄùÁª¥ÂíåÈ¢ÜÂØºËÉΩÂäõ„ÄÇ',
      category: 'education',
      link: null,
      current: false
    }
  ]

  const futureEvents = [
    {
      period: '2026',
      title: 'AIÈ©±Âä®ÁöÑÂá∫Ë°åËß£ÂÜ≥ÊñπÊ°à',
      subtitle: 'Êñ∞È°πÁõÆÂêØÂä®',
      location: 'ÂÖ®ÁêÉ',
      description: 'ÁªìÂêàÊñØÂù¶Á¶èÂ§ßÂ≠¶Â≠¶Âà∞ÁöÑAIÊäÄÊúØÔºåÂºÄÂèë‰∏ã‰∏Ä‰ª£Êô∫ËÉΩÂá∫Ë°åÂπ≥Âè∞ÔºåÊï¥ÂêàÁîüÊàêÂºèAI„ÄÅËÆ°ÁÆóÊú∫ËßÜËßâÁ≠âÊäÄÊúØ„ÄÇ',
      category: 'future',
      link: null,
      current: false
    },
    {
      period: '2027',
      title: 'Êô∫ËÉΩÂüéÂ∏Ç‰∫§ÈÄöÂπ≥Âè∞',
      subtitle: 'ÂüéÂ∏ÇÊï∞Â≠óÂåñËΩ¨Âûã',
      location: 'ÂÖ®ÁêÉ',
      description: 'Âü∫‰∫éAIÊäÄÊúØÊûÑÂª∫Êô∫ÊÖßÂüéÂ∏Ç‰∫§ÈÄöÁ≥ªÁªüÔºåÈÄöËøáÂ§ßËØ≠Ë®ÄÊ®°ÂûãÂíåËßÜËßâÊ®°Âûã‰ºòÂåñÂüéÂ∏Ç‰∫§ÈÄöÊµÅÈáèÂíåÂá∫Ë°å‰ΩìÈ™å„ÄÇ',
      category: 'future',
      link: null,
      current: false
    }
  ]

  const getCategoryColor = (category: string) => {
    const colors = {
      'education': 'from-blue-500 to-blue-600',
      'entrepreneurship': 'from-green-500 to-green-600',
      'consulting': 'from-purple-500 to-purple-600',
      'strategy': 'from-orange-500 to-orange-600',
      'engineering': 'from-gray-500 to-gray-600',
      'automotive': 'from-red-500 to-red-600'
    }
    return colors[category as keyof typeof colors] || 'from-gray-500 to-gray-600'
  }

  const getCategoryIcon = (category: string) => {
    const icons = {
      'education': 'üéì',
      'entrepreneurship': 'üöÄ',
      'consulting': 'üíº',
      'strategy': 'üéØ',
      'engineering': '‚öôÔ∏è',
      'automotive': 'üöó'
    }
    return icons[category as keyof typeof icons] || 'üìã'
  }

  const getCategoryBgColor = (category: string) => {
    const colors = {
      'education': 'bg-blue-50 border-blue-200',
      'entrepreneurship': 'bg-green-50 border-green-200',
      'consulting': 'bg-purple-50 border-purple-200',
      'strategy': 'bg-orange-50 border-orange-200',
      'engineering': 'bg-gray-50 border-gray-200',
      'automotive': 'bg-red-50 border-red-200'
    }
    return colors[category as keyof typeof colors] || 'bg-gray-50 border-gray-200'
  }

  return (
    <section id="timeline" className="section-padding bg-white">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
            {t('timeline.title')}
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            {t('timeline.subtitle')}
          </p>
        </motion.div>

        {/* Current Status */}
        <div className="mb-16">
          <h3 className="text-3xl font-bold text-gray-900 mb-8 text-center">
            {t('timeline.current')}
          </h3>
          <div className="max-w-4xl mx-auto">
            {timelineEvents.filter(event => event.current).map((event, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: -20 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8, delay: 0.2 * index }}
                viewport={{ once: true }}
                className="relative mb-8"
              >
                <div className="flex items-start gap-6">
                  <div className="flex-shrink-0">
                    <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white text-2xl font-bold shadow-lg">
                      {getCategoryIcon(event.category)}
                    </div>
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      <h4 className="text-2xl font-bold text-gray-900">{event.title}</h4>
                      <span className="inline-block px-3 py-1 bg-purple-100 text-purple-800 text-sm font-medium rounded-full border border-purple-200">
                        {t('timeline.current')}
                      </span>
                    </div>
                    <h5 className="text-xl font-semibold text-purple-600 mb-2">{event.subtitle}</h5>
                    <div className="flex items-center gap-4 text-sm text-gray-500 mb-3">
                      <span className="flex items-center gap-1">
                        <Calendar className="w-4 h-4" />
                        {event.period}
                      </span>
                      <span className="flex items-center gap-1">
                        <MapPin className="w-4 h-4" />
                        {event.location}
                      </span>
                    </div>
                    <p className="text-gray-700 leading-relaxed">{event.description}</p>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>

        {/* Professional Experience */}
        <div className="mb-16">
          <h3 className="text-3xl font-bold text-gray-900 mb-8 text-center">
            ËÅå‰∏öÁªèÂéÜ
          </h3>
          <div className="max-w-4xl mx-auto">
            {timelineEvents.filter(event => !event.current).map((event, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: index % 2 === 0 ? -20 : 20 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8, delay: 0.2 * index }}
                viewport={{ once: true }}
                className="relative mb-8"
              >
                <div className="flex items-start gap-6">
                  <div className="flex-shrink-0">
                    <div className={`w-12 h-12 ${getCategoryBgColor(event.category)} rounded-full flex items-center justify-center text-lg font-bold border`}>
                      {getCategoryIcon(event.category)}
                    </div>
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      <h4 className="text-xl font-bold text-gray-900">{event.title}</h4>
                      <span className={`inline-block px-2 py-1 text-xs font-medium rounded-full border ${getCategoryBgColor(event.category)}`}>
                        {event.category}
                      </span>
                    </div>
                    <h5 className="text-lg font-semibold text-primary-600 mb-2">{event.subtitle}</h5>
                    <div className="flex items-center gap-4 text-sm text-gray-500 mb-3">
                      <span className="flex items-center gap-1">
                        <Calendar className="w-4 h-4" />
                        {event.period}
                      </span>
                      <span className="flex items-center gap-1">
                        <MapPin className="w-4 h-4" />
                        {event.location}
                      </span>
                    </div>
                    <p className="text-gray-700 leading-relaxed">{event.description}</p>
                    {event.link && (
                      <a
                        href={event.link}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mt-3 text-sm font-medium"
                      >
                        <ExternalLink className="w-4 h-4" />
                        ‰∫ÜËß£Êõ¥Â§ö
                      </a>
                    )}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>

        {/* Education */}
        <div className="mb-16">
          <h3 className="text-3xl font-bold text-gray-900 mb-8 text-center">
            ÊïôËÇ≤ËÉåÊôØ
          </h3>
          <div className="max-w-4xl mx-auto">
            {educationEvents.map((event, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: index % 2 === 0 ? -20 : 20 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8, delay: 0.2 * index }}
                viewport={{ once: true }}
                className="relative mb-8"
              >
                <div className="flex items-start gap-6">
                  <div className="flex-shrink-0">
                    <div className={`w-12 h-12 ${getCategoryBgColor(event.category)} rounded-full flex items-center justify-center text-lg font-bold border`}>
                      {getCategoryIcon(event.category)}
                    </div>
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      <h4 className="text-xl font-bold text-gray-900">{event.title}</h4>
                      <span className={`inline-block px-2 py-1 text-xs font-medium rounded-full border ${getCategoryBgColor(event.category)}`}>
                        {event.category}
                      </span>
                    </div>
                    <h5 className="text-lg font-semibold text-primary-600 mb-2">{event.subtitle}</h5>
                    <div className="flex items-center gap-4 text-sm text-gray-500 mb-3">
                      <span className="flex items-center gap-1">
                        <Calendar className="w-4 h-4" />
                        {event.period}
                      </span>
                      <span className="flex items-center gap-1">
                        <MapPin className="w-4 h-4" />
                        {event.location}
                      </span>
                    </div>
                    <p className="text-gray-700 leading-relaxed">{event.description}</p>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>

        {/* Future Vision */}
        <div>
          <h3 className="text-3xl font-bold text-gray-900 mb-8 text-center">
            {t('timeline.future')}
          </h3>
          <div className="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
            {futureEvents.map((event, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.2 * index }}
                viewport={{ once: true }}
                className="bg-gradient-to-br from-indigo-50 to-purple-50 p-6 rounded-xl border border-indigo-200 hover:shadow-lg transition-shadow duration-200"
              >
                <div className="flex items-center gap-4 mb-4">
                  <div className="w-12 h-12 bg-indigo-100 text-indigo-800 rounded-full flex items-center justify-center text-xl font-bold border border-indigo-200">
                    {getCategoryIcon(event.category)}
                  </div>
                  <div>
                    <h4 className="text-xl font-bold text-gray-900">{event.title}</h4>
                    <span className="text-indigo-600 font-medium">{event.period}</span>
                  </div>
                </div>
                <h5 className="text-lg font-semibold text-indigo-600 mb-2">{event.subtitle}</h5>
                <div className="flex items-center gap-2 text-sm text-gray-500 mb-3">
                  <MapPin className="w-4 h-4" />
                  {event.location}
                </div>
                <p className="text-gray-700 leading-relaxed">{event.description}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}

export default Timeline
